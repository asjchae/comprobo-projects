--- Mobile Robotics Project ---
by Ari Chae and Sharon Grimshaw
10/14/2014 Computational Robotics

1. What was the goal of your project?
Our goal was to teach the NEATO (using supervised learning) to approach a wall and stop.

2. How did you solve the problem?
We started by writing a data collection script to save teleop data so that we could show the robot what we wanted it to do when it saw a wall. We saved that, along with the laser scan the robot was seeing at the time, to a pickle file and then used linear regression to find the constant that best approximated our data. Then we used that constant to have the robot approach the wall on its own and stop at the appropriate time.

3. Describe a design decision you had to make when working on your project and what you ultimately did and why.
We had to decide how to store the laser scan training data that we would be using in the linear regression. Ultimately, we decided to use a pickle file over a database. We didn't have enough data to warrant setting up a database and it was much less complicated to just dump to a pickle file. Before making this decision, we first tested the speed at which we could pickle data to make sure that it wouldn't impact our data collection. When we saw that it was both less complicated to pickle the data and that the data would pickle fast enough, we chose to push forward with pickling instead of using a database.

4. How did you structure your code?
We split our code into three parts - a data collection script, a linear regression script, and a robot moving script. The data collection script (data_collect.py) collected and saved laser scan data while we were driving the NEATO using teleop. We then pickled all these laser scans. The linear regression script (unpacker.py) uses Ridge from scikit-learn's linear_model package to find a best-fit line for the velocity based on which laser scan the robot sees and saves this information in a Ridge object into a second pickle file. The robot mover script (move_robot.py) takes a laser scan of where the NEATO is currently, uses the constant derived from the linear regression, and chooses how fast the robot should be moving at the time.

5. What (if any) challenges did you face along the way?
The biggest challenge was to learn enough about machine learning to teach the robot how we wanted it to move. We learned how to use a linear regression in the linear_model package of scikit-learn and used the constant to train the robot. Another challenge was to understand the data that we were getting. The output of the Ridge function is a Ridge object and we had to learn how to access the data that we wanted so that we could teach the robot how to move.

6. What would you do to improve your project if you had more time?
The next step would be to add in turning. Our reach goal was to have the robot slow down and turn when it approached a wall, but we just ran out of time. We decided to focus on linear movement (instead of angular movement).

7. Did you learn any interesting lessons for future robotic programming projects? (ex: teaming, open-ended projects, longer-term goals, etc.)
The big insight that we will take forward is to build code in small pieces. We started by building code in large chunks and not doing much testing, but this made debugging much more challenging later. We also found that having both of us debugging together made debugging go faster as opposed to one person staring at the code on their own.